//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectionTool.Entity_Framework
{
    using System;
    using System.Collections.Generic;
    
    public partial class Election
    {
        public Election()
        {
            this.AllowedToElects = new HashSet<AllowedToElect>();
            this.CandidateLists = new HashSet<CandidateList>();
            this.Erststimmes = new HashSet<Erststimme>();
            this.IsElectableCandidates = new HashSet<IsElectableCandidate>();
            this.IsElectableParties = new HashSet<IsElectableParty>();
            this.PartyAffiliations = new HashSet<PartyAffiliation>();
            this.PopulationBundeslands = new HashSet<PopulationBundesland>();
            this.Zweitstimmes = new HashSet<Zweitstimme>();
            this.People = new HashSet<Person>();
        }
    
        public int Id { get; set; }
        public System.DateTime Date { get; set; }
        public int SeatsBundestag { get; set; }
    
        public virtual ICollection<AllowedToElect> AllowedToElects { get; set; }
        public virtual ICollection<CandidateList> CandidateLists { get; set; }
        public virtual ICollection<Erststimme> Erststimmes { get; set; }
        public virtual ICollection<IsElectableCandidate> IsElectableCandidates { get; set; }
        public virtual ICollection<IsElectableParty> IsElectableParties { get; set; }
        public virtual ICollection<PartyAffiliation> PartyAffiliations { get; set; }
        public virtual ICollection<PopulationBundesland> PopulationBundeslands { get; set; }
        public virtual ICollection<Zweitstimme> Zweitstimmes { get; set; }
        public virtual ICollection<Person> People { get; set; }
    }
}
